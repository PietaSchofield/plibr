plib::autoCommit()
install.packages("nvimcom")
BiocInstaller::biocLite("nvimcom")
wq
require(nvimcom)
ls()
BiocInstaller::biocLite("ggplot2")
sessionInfo()
.libpaths()
libpaths()
libPaths()
.libPaths()
Â§cd
sDf$pid <- paste0(sDf$V1,".",sDf$V2,".",sDf$V3,".",substr(sDf$V4,1,2))
rownames(sDf) <- colnames(prad.rnaseq)
sD <- sDf[grep("^01",sDf$V4),]
sip <- sip[which(rownames(sip)%in%sD$pid),]
sip$time <- as.numeric(sip$Disease.Free..Months.)
sip$Disease.Free.Status[which(sip$Disease.Free.Status==0)] <- "DiseaseFree"
sip$status <- ifelse(sip$Disease.Free.Status=="DiseaseFree",0,1)
colnames(prad.rnaseq) <- gsub("-",".",substr(colnames(prad.rnaseq),1,15))
eip <- prad.rnaseq[,which(colnames(prad.rnaseq)%in%rownames(sip))]
sip <- merge(pdata,pradClin[,c(21,22,49,50)],by="row.names")
sDf <- plyr::ldply(strsplit(colnames(prad.rnaseq),"[.]"))
sDf
colnames(pradClin)
sampleInfo <- plyr::ldply(strsplit(substr(colnames(prad.rnaseq),1,15),"[.]"))
rownames(sampleInfo) <- substr(colnames(prad.rnaseq),1,15)
sampleInfo$PID <- with(sampleInfo,paste(V1,V2,V3,sep="_"))
mutationInfo <- plyr::ldply(strsplit(as.character(pdata$SAMPLE_ID),"[-]"))
rownames(mutationInfo) <- as.character(pdata$SAMPLE_ID)
mutationInfo$PID <- with(mutationInfo,paste(V1,V2,V3,sep="_"))
normalInfo <- sampleInfo[which(sampleInfo$V4 == "11"),]
tumourInfo <- sampleInfo[which(sampleInfo$V4 == "01"),]
normalPair <- normalInfo[which(normalInfo$PID %in% mutationInfo$PID),]
tumourPair <- tumourInfo[which(tumourInfo$PID %in% mutationInfo$PID &
tumourInfo$PID %in% normalInfo$PID),]
pairSamples <- rbind(normalPair,tumourPair)
pairSamples$SampleID <- rownames(pairSamples)
pairSamples <- reshape2::dcast(pairSamples,PID~V4,value.var="SampleID")
colnames(pairSamples) <- c("PatientID","Tumour","Normal")
colnames(pradClin) <- gsub("__","_",gsub("[.]","_",colnames(pradClin)))
pdata$SAMPLE_ID <- as.character(pdata$SAMPLE_ID)
pdata$PATIENT_ID <- as.character(pdata$PATIENT_ID)
patientData <- merge(pradClin,pdata,by.x="Patient_ID",by.y="PATIENT_ID")
patientData$Patient_ID <- gsub("[-]","_",patientData$Patient_ID)
patientData$Sample_ID <- gsub("[-]","_",patientData$SAMPLE_ID)
expressionData <- prad.rnaseq
colnames(expressionData) <- gsub("[.]","_",substr(colnames(expressionData),1,15))
expressionData <- expressionData[,which(substr(colnames(expressionData),1,12)%in%
patientData$Patient_ID)]
sampleInfo <- sampleInfo[,c(5,4)]
colnames(sampleInfo) <- c("PatientID","SampleType")
rownames(sampleInfo) <- gsub("[.]","_",rownames(sampleInfo))
patientInfo <- patientData[,c("Sample_ID","Subtype","ETV1_status","Patient.s.Vital.Status",
"ERG_status","Disease.Free..Months.","Disease.Free.Status",
"Overall.Survival..Months.","Overall.Survival.Status")]
colnames(patientData)
"ERG_status","Disease_Free_Months.","Disease_Free_Status",
"Overall_Survival_Months.","Overall_Survival_Status")]
patientInfo <- patientData[,c("Sample_ID","Subtype","Patient_s_Vital_Status","ETV1_status",
"ERG_status","Disease_Free_Months_","Disease_Free_Status",
"Overall_Survival_Months_","Overall_Survival_Status")]
colnames(patientInfo) <- c("Sample_ID","Subtype","VitalStatus","ETV1status",
"ERGstatus","DFMonths","DFStatus", "OSMonths","OSStatus")
save(sigs,patientData,patientInfo,expressionData,sampleInfo,pairSamples,file=workingFile)
kable(pairSamples)
exprdataTN <- expressionData[,which(substr(colnames(expressionData),1,12) %in%
pairSamples$PatientID)]
sampledataTN <- sampleInfo[which(rownames(sampleInfo)%in%colnames(exprdataTN)),]
sampledataTN <- as.data.frame(apply(merge(patientInfo,sampledataTN,by.y="row.names",
by.x="Sample_ID",all.y=T),2,as.character))
sampledataTN$Type <- ifelse(grepl("01$",sampledataTN$Sample_ID),"Tumour","Normal")
rownames(sampledataTN) <- sampledataTN[,1]
sampledataTN <- sampledataTN[,-1]
sampledataTN$Subtype[is.na(sampledataTN$Subtype)] <- "Normal"
table(sampledataTN$Subtype)
tvnNormExp <- 1e6*t(t(exprdataTN)/colSums(exprdataTN)) + 0.0001
tvncpm <- log(tvnNormExp[rowSums(apply(tvnNormExp,2,function(x) x>0))>(0.25*ncol(tvnNormExp)),])
tvnpca <- prcomp(t(tvncpm))
tvnpdt <- plyr::ldply(strsplit(colnames(tvncpm),"[_]"))
rownames(tvnpdt) <- colnames(tvncpm)
tvnpdt <- merge(sampledataTN,tvnpdt,by="row.names")
rownames(tvnpdt) <- tvnpdt[,1]
autoplot(tvnpca,data=tvnpdt,colour="Subtype",shape="Type",
main="PCA Plot for Tumour Normal Pairs")
write.csv(tvncpm,file=file.path(.localData,"PRAD_logCPM_TumourVNormal.csv"))
write.csv(tvnpdt,file=file.path(.localData,"PRAD_samples_TumourVNormal.csv"))
sip <- patientInfo
patientInfo
rownames(sip) <- sip[,1]
sip <- sip[,-1]
sip$status <- ifelse(sip$DFStatus=="DiseaseFree",0,1)
sip
sip$time <- as.numeric(sip$DFMonths)
sip <- na.omit(sip)
dim(eip)
eip <- log(1e6*t(t(eip)/colSums(eip))+0.0001)
eip <- eip[rowSums(apply(eip,2,function(x) x>0))>(0.25*ncol(eip)),]
cip <- eip[rowSums(apply(eip,2,function(x) x>0))>(0.25*ncol(eip)),]
kable(res$plt$tabcox)
plot(res$phm$gtable)
rb()
colnames(sip)
expData=hmExpsurvData=sip;hm=F;gcl=F;gcts=10;cmeth="ward.D2"
expData=hmExp;survData=sip;hm=F;gcl=F;gcts=10;cmeth="ward.D2"
hclslm <- survData[,c("ETV1status","Subtype")]
hclslm <- cutree(hcls,2)
survData[,c("ETV1status","Subtype")]
hclslm
hm=T
plib::rb)
sipaug[,c("ETV1status","Subtype")]
cex=0.75,breaks=breaks,show_colnames=F,silent=T)
plt
kable(res$plt$tabkm)
eip <- expressionData[,which(colnames(expressionData)%in%rownames(sip))]
eip <- 1e6*t(t(eip)/colSums(eip))
cip <- log(eip[rowSums(apply(eip,2,function(x) x>0))>(0.25*ncol(eip)),]+0.0000001)
fulSig <- rownames(cip)
hmExp <- cip[which(rownames(cip)%in%fulSig),]
cv.fit <- cv.glmnet(t(hmExp), Surv(sip$time,sip$status), family="cox")
sv <- cv.fit$lambda.min
Coefs <- coef(cv.fit,s=sv)
fulSigGLM <- names(Coefs[which(Coefs[,1]!=0),])
fulSigGLM
hmExp <- cip[which(rownames(cip)%in%fulSigGLM),]
res <- evalCluster(hmExp,sip,hm=T,gcl=T,gcts=2,cmeth="ward.D")
plot(res$plt$graph)
expData <- hmExp
survData <- sip
hcls <- hclust(as.dist(1-cor(expData)),method=cmeth)
hclslm <- as.data.frame(cutree(hcls,2))
colnames(hclslm) <- "Cluster"
hclslm$Cluster <- as.factor(hclslm$Cluster)
sipaug <- merge(survData,hclslm,by="row.names")
rownames(sipaug) <- sipaug[,1]
sipaug <- sipaug[,-1]
fit <- survival::survfit(Surv(time,status)~Cluster,sipaug)
plt <- plotKM(fit,sipaug)
breaks=seq(-2, 2, by=0.1)
breaks=append(breaks, 10)
breaks=append(breaks, -10, 0)
colpal <- colorRampPalette(rev(brewer.pal(n = 7, name ="RdYlBu")))(length(breaks-1))
if(gcl){
hclg <- hclust(as.dist(1-cor(t(expData))),method=cmeth)
hclglm <- as.data.frame(cutree(hclg,gcts))
colnames(hclglm) <- "Cluster"
hclglm$Cluster <- as.factor(hclglm$Cluster)
hclg <- FALSE
hclglm <- NULL
if(hm){
}else{
phm <- NULL
}
cluster_rows=hclg,annotation_col=sipaug[,c("ETV1status","Subtype")],
phm <- pheatmap::pheatmap(expData,scale="row",cluster_cols=hcls,color=colpal,
cluster_rows=hclg,annotation_col=hclslm,
cex=0.75,breaks=breaks,show_colnames=F,silent=F)
list(plt=plt,phm=phm)
plib::rb()
plib::rcur(fileName="201805_summary",projDir="etb1_vu",open="html",upload=T)
base::source("/var/folders/br/yxws82j14bzcd2pq10rqswtw0000gp/T/Nvim-R-pschofield/Rsource-966", print.eval=TRUE)
q()
